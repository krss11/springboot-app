on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_CONTAINER_REGISTRY: "azurecontainerkrss"
  CONTAINER_NAME: "springboot-appe"
  RESOURCE_GROUP: "azure-terraform-rg"
  CLUSTER_NAME: "azureakskrss"
  DEPLOYMENT_MANIFEST_PATH: "aks-deploy-from-acr.yaml"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
    - name: Build and push Docker image
      run: |
           #docker buildx create --use
           docker build . --file Dockerfile --tag springboot-app:latest
           docker login azurecontainerkrss.azurecr.io -u ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }} -p ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
           docker tag springboot-app:latest azurecontainerkrss.azurecr.io/springboot-app:latest
           docker push azurecontainerkrss.azurecr.io/springboot-app:latest

    - name: Deploys to AKS
      run: |
        kubectl config use-context ${{env.CLUSTER_NAME}}
        kubectl apply -f aks-deploy-from-acr.yaml
